---

- name: ensure motion directory in home folder
  become_user: "{{ main_user }}"
  file:
    path: "/home/{{ main_user }}/motion"
    state: directory

- name: "ensure motion service directory is owned by {{ main_user }}"
  file:
    path: "/run/shm/"
    state: directory
    owner: "{{ main_user }}"


- name: Install list of packages for https://raspberrytips.com/raspberry-pi-camera-as-webcam/
  ansible.builtin.package:
    name: "{{ item.name }}"
    state: latest
  with_items:
    - { name: build-essential }
    - { name: cmake }
    - { name: pkg-config }
    - { name: libjpeg-dev }
    - { name: libtiff5-dev }
    - { name: libpng-dev }
    - { name: libavcodec-dev }
    - { name: libavformat-dev }
    - { name: libswscale-dev }
    - { name: libv4l-dev }
    - { name: libxvidcore-dev }
    - { name: libx264-dev }
    - { name: libfontconfig1-dev }
    - { name: libcairo2-dev }
    - { name: libgdk-pixbuf2.0-dev }
    - { name: libpango1.0-dev }
    - { name: libgtk2.0-dev }
    - { name: libgtk-3-dev }
    - { name: libatlas-base-dev }
    - { name: gfortran }
    - { name: libhdf5-dev }
    - { name: libhdf5-serial-dev }
    - { name: libhdf5-103 }
    - { name: libqt5gui5 }
    - { name: libqt5webkit5 }
    - { name: libqt5test5 }
    - { name: python3-pyqt5 }
    - { name: python3-dev }
    - { name: motion              }
    - { name: libavutil-dev       }
    - { name: libjpeg62-turbo-dev }
    - { name: libpq-dev           }
    - { name: libswresample-dev   }

- name: configure swap memory
  ansible.builtin.lineinfile:
    path: /etc/dphys-swapfile
    regexp: '^CONF_SWAPSIZE='
    line: CONF_SWAPSIZE=2048

- name: flip display
  ansible.builtin.lineinfile:
    path: /boot/config.txt
    regexp: '^lcd_rotate'
    line: lcd_rotate=2

- name: Install python packages
  ansible.builtin.pip:
    name: "{{ item.name }}"
    state: latest
  with_items:
    - { name: virtualenv }
    - { name: opencv-contrib-python }


- name: Set hostname
  ansible.builtin.hostname:
    name: cambot      

- name: Unarchive a camera server
  ansible.builtin.get_url:
    url: "https://www.dropbox.com/s/6ruqgv1h65zufr6/motion-mmal-lowflyerUK-20151114.tar.gz"
    dest: "/home/{{ main_user }}/motion-mmal-lowflyerUK-20151114.tar.gz"
    backup: yes
  register: motion_code

- name: Run command if /path/to/database does not exist (with 'cmd' parameter)
  ansible.builtin.command:
    cmd: "tar -zxvf motion-mmal-lowflyerUK-20151114.tar.gz -C /home/{{ main_user }}/motion/"
    creates: "/home/{{ main_user }}/motion/motion"


- name: Copy Motion service file accross
  ansible.builtin.template:
    dest: "/etc/systemd/system/picam.service" 
    src: "picam.service"
  register: systemctl_reread

- name: reread systemctl config files
  ansible.builtin.service:
    daemon_reload: yes
  when: systemctl_reread.changed

- name: ensure motion service restarted after update
  ansible.builtin.service:
    name: "picam"
    enabled: yes
    state: restarted
  when: motion_code.changed

- name: ensure motion service running
  ansible.builtin.service:
    name: "picam"
    enabled: yes
    state: started  
